name: Build and deploy skialib
on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - master
  #   paths:
  #     - .github/workflows/**
  #     - "*.sh"

# env:
#   release: ${{ GITHUB_SHA }}

jobs:
  macos:
    runs-on: macos-14
    environment: Actions
    strategy:
      matrix:
        build_type: [Release]
        arch: ["x86_64", "arm64"]
      fail-fast: false
    env:
      platform: macos
      build_type: ${{ matrix.build_type }}
      arch: ${{ matrix.arch }}
      java_arch: ${{ matrix.arch == 'x86_64' && 'x64' || 'aarch64' }}
      shared_suffix: "dylib"
      artifact_name: libmembraneskia-${{matrix.arch}}.dylib
    steps:
      - uses: actions/checkout@v2
      - run: ./csource/check_release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./csource/download_skia.sh
      - run: ./csource/compile_macosx.sh
      - uses: actions/upload-artifact@v2
        with:
          name: libmembraneskia-${{matrix.arch}}.dylib
          path: csource/libmembraneskia-${{matrix.arch}}.dylib
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
          architecture: ${{ env.java_arch }}
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@3.5
        with:
          # Install just one or all simultaneously
          cli: 1.10.1.693 # Clojure CLI based on tools.deps
      - run: clojure -T:skialib-deploy :platform '"${{matrix.platform}}"' :arch '"${{matrix.arch}}"'
        env:
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}

  linux:
    runs-on: ubuntu-20.04
    environment: Actions
    strategy:
      matrix:
        build_type: [Release]
        arch: ["x86_64"]
      fail-fast: false
    env:
      platform: linux
      build_type: ${{ matrix.build_type }}
      arch: ${{ matrix.arch }}
      shared_suffix: "so"
      artifact_name: libmembraneskia-${{matrix.arch}}.so
    steps:
      - uses: actions/checkout@v2
      - run: ./csource/check_release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: sudo ./csource/prepare_linux.sh
      - run: ./csource/download_skia.sh
      - run: ./csource/compile_linux.sh
      - uses: actions/upload-artifact@v2
        with:
          name: libmembraneskia-${{matrix.arch}}.so
          path: csource/libmembraneskia-${{matrix.arch}}.so
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@3.5
        with:
          # Install just one or all simultaneously
          cli: 1.10.1.693 # Clojure CLI based on tools.deps
      - run: clojure -T:skialib-deploy :platform '"${{matrix.platform}}"' :arch '"${{matrix.arch}}"'        env:
          CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
          CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
